# A Unique name for this workflow
name: CI-LFLProduction

# Definition when the workflow should run
on:
  workflow_dispatch:

# Jobs to be executed
jobs:
  formatting-and-linting:
    runs-on: ubuntu-latest
    steps:
      # Checkout the code in the pull request
      - name: "Checkout source code"
        uses: actions/checkout@v2

      # Cache node_modules to speed up the process
      - name: Restore node_modules cache
        id: cache-npm
        uses: actions/cache@v1
        with:
          path: node_modules
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            npm-${{ env.cache-name }}-
            npm-
      # Install npm dependencies for Prettier and Jest
      - name: "Install npm dependencies"
        if: steps.cache-npm.outputs.cache-hit != 'true'
        run: npm install

      # Prettier formatting
      - name: "Code formatting verification with Prettier"
        run: npm run prettier:verify

      # ESlint
      - name: "Lint Lightning Web Components"
        run: npm run lint

  production-push:
    runs-on: ubuntu-latest
    needs: formatting-and-linting
    if: ${{ github.actor != 'dependabot[bot]' }}
    steps:
      # Install Salesforce CLI
      - name: "Install Salesforce CLI"
        run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version
      # Checkout the source code
      - name: "Checkout source code"
        uses: actions/checkout@v2

      # Store secret for review production
      - name: "Populate auth file with LFL_HYPER_PRODUCTION_URL secret"
        shell: bash
        run: |
          echo ${{ secrets.LFL_HYPER_PRODUCTION_URL}} > ./LFL_HYPER_PRODUCTION_URL.txt
          secretFileSize=$(wc -c "./LFL_HYPER_PRODUCTION_URL.txt" | awk '{print $1}')
          if [ $secretFileSize == 1 ]; then
              echo "Missing LFL_HYPER_PRODUCTION_URL secret. Is this workflow running on a fork?";
              exit 1;
          fi
      # Authenticate sandbox
      - name: "Authenticate Production"
        run: sfdx auth:sfdxurl:store -f ./LFL_HYPER_PRODUCTION_URL.txt -a LFLHyper -s

      # Run Deploy Apex and Triggers
      - name: "Deploy Apex and Run Specified Tests"
        run: sfdx force:source:deploy -m "ApexClass,ApexTrigger" -u LFLHyper -l RunSpecifiedTests -r TestL4LController,TestL4LSessionStatsController,TestLFLClientObjectiveHelper,TestLFLInvocableMasteryStatistics,TestLFLInvocableReportWizard,TestLFLInvocableSessionStatistics,TestLFLPopulateTestData,TestLFLProgramStatusCascadeUtil,TestCascadeProgramStatusTrg,TestCascadeSDStatusTrg,TestDaysSinceUpdatedTrg,TestLFLSessionStatsTrg

      # Run Deploy LWC
      - name: "Deploy LWC"
        run: sfdx force:source:deploy -m "LightningComponentBundle" -u LFLHyper

      # Run Apex tests in scratch org
      - name: "Run Specifed Apex Tests to Gather Code Coverage"
        run: sfdx force:apex:test:run -l RunSpecifiedTests -t TestL4LController,TestL4LSessionStatsController,TestLFLClientObjectiveHelper,TestLFLInvocableMasteryStatistics,TestLFLInvocableReportWizard,TestLFLInvocableSessionStatistics,TestLFLPopulateTestData,TestLFLProgramStatusCascadeUtil,TestCascadeProgramStatusTrg,TestCascadeSDStatusTrg,TestDaysSinceUpdatedTrg,TestLFLSessionStatsTrg  -u LFLHyper -c -r human -d ./tests/apex -w 20

      # Delete temporary test file that Codecov is unable to parse
      - name: "Delete coverage file (temporary step)"
        run: rm ./tests/apex/test-result-707*-codecoverage.json

      # Upload code coverage data
      - name: "Upload code coverage for Apex to Codecov.io"
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          flags: Apex
